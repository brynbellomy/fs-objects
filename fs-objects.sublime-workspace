{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mod",
				"modifiedHTML"
			],
			[
				"add",
				"add_file_references"
			],
			[
				"Fil",
				"File	File.open(\"..\") { |file| .. }"
			],
			[
				"submo",
				"submoduleTarget"
			],
			[
				"ensu",
				"ensureFileRef"
			],
			[
				"fileR",
				"filerefWithPath"
			],
			[
				"ensur",
				"ensureTarget"
			],
			[
				"pro",
				"product_name"
			],
			[
				"sta",
				"startIndex"
			],
			[
				"Linked",
				"LinkedList"
			],
			[
				"Link",
				"LinkedList"
			],
			[
				"swi",
				"swift-marked-sections"
			],
			[
				"removeV",
				"removeValueForKey"
			],
			[
				"index",
				"indexForKey"
			],
			[
				"Ord",
				"OrderedDictionaryElement"
			],
			[
				"node",
				"nodeAtIndex"
			],
			[
				"No",
				"NodeType"
			],
			[
				"List",
				"ListType"
			],
			[
				"LinkedL",
				"LinkedListNode"
			],
			[
				"check",
				"checkIndex"
			],
			[
				"element",
				"elementsDict"
			],
			[
				"ele",
				"elementsList"
			],
			[
				"list",
				"listIndexForKey"
			],
			[
				"elements",
				"elementsList"
			],
			[
				"elem",
				"elementsDict"
			],
			[
				"Or",
				"OrderedDictionaryElement"
			],
			[
				"proto",
				"protocol-variable-declaration"
			],
			[
				"a-zA",
				"a-zA-Z0-9_"
			],
			[
				"end",
				"endCaptures	endCaptures:"
			],
			[
				"begin",
				"beginCaptures	beginCaptures:"
			],
			[
				"cre",
				"creepBehaviors"
			],
			[
				"scene",
				"sceneUpdateObservers"
			],
			[
				"Play",
				"PlaylistID"
			],
			[
				"manag",
				"inManagedObjectContext"
			],
			[
				"dispo",
				"disposable1"
			],
			[
				"currentl",
				"currentlyPlayingItem"
			],
			[
				"curre",
				"currentlyPlayingIndex"
			],
			[
				"currenT",
				"currentItemIndex"
			],
			[
				"dispat",
				"dispatch_async_main"
			],
			[
				"icon",
				"iconForItem"
			],
			[
				"badge",
				"badgeValueForItem"
			],
			[
				"PXSourc",
				"PXSourceListItem"
			],
			[
				"sourceLi",
				"sourceListItems"
			],
			[
				"_aud",
				"_audioPlayerDelegateWrapper"
			],
			[
				"audi",
				"audioPlayer"
			],
			[
				"with",
				"withBufferSize"
			],
			[
				"EZA",
				"EZAudioPlayerDelegateSwift"
			],
			[
				"Audio",
				"AudioManagerPlaybackTimeObserver"
			],
			[
				"lae",
				"label_trackDuration"
			],
			[
				"label_",
				"label_trackTitle"
			],
			[
				"SEPla",
				"SEPlaylistModel"
			],
			[
				"SEPlay",
				"SEPlaylistItem"
			],
			[
				"SEPlaylis",
				"SEPlaylistModel"
			],
			[
				"asset",
				"assetWithURL"
			],
			[
				"current",
				"currentItemIndex"
			],
			[
				"willS",
				"willSet	willSet {...}"
			],
			[
				"didSet",
				"didSet	didSet {...}"
			],
			[
				"collection",
				"collection_playlist"
			],
			[
				"nib",
				"nibNameOrNil"
			],
			[
				"SEAudio",
				"SEAudioManagerDataSource"
			],
			[
				"string",
				"stringByReplacingOccurrencesOfString"
			],
			[
				"bryn_",
				"bryn_prepend_path"
			],
			[
				"rgb",
				"rgba(r,g,b,a)"
			],
			[
				"border-top",
				"border-top-right-radius"
			],
			[
				"track",
				"trackName"
			],
			[
				"col-m",
				"col-md-8"
			],
			[
				"soundcloud",
				"soundcloudTrackID"
			],
			[
				"acti",
				"activeClass"
			],
			[
				"remove",
				"removeActiveClass"
			],
			[
				"carousel-",
				"carousel-illumntr-home"
			],
			[
				"tangl",
				"tangled-with-bear--release-2013"
			],
			[
				"gulf-h",
				"gulf-hymn--release-2014"
			],
			[
				"Static",
				"StaticPagesListItem"
			],
			[
				"pho",
				"phoneStripped"
			],
			[
				"bk_",
				"bk_resultsOfRegex"
			],
			[
				"data",
				"databaseID"
			],
			[
				"Vi",
				"VideoListItem.java	File"
			],
			[
				"stat",
				"staticPagesDataStore"
			],
			[
				"ListItem",
				"ListItemCellViewWrapper"
			],
			[
				"getL",
				"getListViewCellLayoutID"
			],
			[
				"get",
				"getListViewCellTextResourceID"
			],
			[
				"render",
				"renderedCategory"
			],
			[
				"categ",
				"categories"
			],
			[
				"genera",
				"generateHTMLForItem"
			],
			[
				"load",
				"loadedItem"
			],
			[
				"Ship",
				"ShipCategory.java	File"
			],
			[
				"fetchAll",
				"fetchAllParentsOfItem"
			],
			[
				"search",
				"searchStringUppercased"
			],
			[
				"initialize",
				"initializedDataStores"
			],
			[
				"initia",
				"initializedDataStores"
			],
			[
				"L3L",
				"L3ListItem.java	File"
			],
			[
				"shipDataS",
				"shipDataStoreManager"
			],
			[
				"loaded",
				"loadedItems"
			],
			[
				"IData",
				"IDataStoreManager.java	File"
			],
			[
				"number",
				"numberOfChildrenForItem"
			],
			[
				"children",
				"childrenOfItemWithID"
			],
			[
				"pare",
				"parentOfItem"
			],
			[
				"IList",
				"IListDataStore.java	File"
			],
			[
				"onData",
				"onDataStoresFinishedInitializing"
			],
			[
				"onD",
				"onProgressUpdate"
			],
			[
				"onDa",
				"onDataStoresInitializationProgress"
			],
			[
				"Initialize",
				"InitializeDataStoresAsyncTask"
			],
			[
				"tool",
				"toolbarTitle"
			],
			[
				"curren",
				"currentListItem"
			],
			[
				"o",
				"docRoot}	{@docRoot}"
			],
			[
				"stati",
				"staticPageData"
			],
			[
				"ShipListI",
				"ShipsListItem"
			],
			[
				"paren",
				"parentsOfItem"
			],
			[
				"tapp",
				"tappedItem"
			],
			[
				"StaticP",
				"StaticPageActivity"
			],
			[
				"tapped",
				"tappedItemIndex"
			],
			[
				"click",
				"clickedItemIndex"
			],
			[
				"clicked",
				"clickedShipDatabaseID"
			],
			[
				"ShipsL",
				"ShipsListItem"
			],
			[
				"Shi",
				"ShipsListItem"
			],
			[
				"cu",
				"currentKeywordFilter"
			],
			[
				"imgButt",
				"imgButtonStaticPages"
			],
			[
				"imgSta",
				"imgButtonStaticPages"
			],
			[
				"imgS",
				"imgButtonStaticPages"
			],
			[
				"img",
				"imgButtonShipReferenceGuide"
			],
			[
				"text-",
				"text-align"
			],
			[
				"list-s",
				"list-style-type"
			],
			[
				"curr",
				"currentListItem"
			],
			[
				"cur",
				"currentListItem"
			],
			[
				"assert",
				"assertNotNull"
			],
			[
				"StaticPa",
				"StaticPagesListItem"
			],
			[
				"htmlS",
				"htmlSrcFilename"
			],
			[
				"htmlSr",
				"htmlSrc"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 368.0,
		"last_filter": "enable",
		"selected_items":
		[
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"marked",
				"Open in Marked"
			],
			[
				"markdo",
				"Set Syntax: Markdown (Github Flavored)"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"jsne",
				"Set Syntax: JavaScript Next"
			],
			[
				"javasc",
				"Set Syntax: JavaScript"
			],
			[
				"markdown",
				"Set Syntax: Markdown (Github Flavored)"
			],
			[
				"openev",
				"Evernote: Open Evernote Note"
			],
			[
				"github",
				"Set Syntax: Markdown (Github Flavored)"
			],
			[
				"openmar",
				"Open in Marked"
			],
			[
				"open in ",
				"Open in Marked"
			],
			[
				"shell",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"aaapacakset",
				"z:AAAPackageDev: New Settings File"
			],
			[
				"openres",
				"PackageResourceViewer: Open Resource"
			],
			[
				"buildview",
				"Disable/Enable buildview for this window"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"open resou",
				"PackageResourceViewer: Open Resource"
			],
			[
				"ruby",
				"Set Syntax: Ruby"
			],
			[
				"keymaps",
				"Keymaps: Find a keymap for..."
			],
			[
				"keym",
				"Keymaps: Cheat Sheet"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"conv",
				"z:AAAPackageDev: Convert (YAML, JSON, PList) to…"
			],
			[
				"scop",
				"Toggle ScopeAlways"
			],
			[
				"scope",
				"Toggle ScopeAlways"
			],
			[
				"yaml",
				"Set Syntax: YAML"
			],
			[
				"sco",
				"Toggle ScopeAlways"
			],
			[
				"col",
				"Color Picker"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"open res",
				"PackageResourceViewer: Open Resource"
			],
			[
				"keybin",
				"Preferences: Key Bindings - User"
			],
			[
				"operes",
				"PackageResourceViewer: Open Resource"
			],
			[
				"newswi",
				"Set Syntax: New Swift"
			],
			[
				"scopee",
				"Set Syntax: tmLang Scope Names"
			],
			[
				"yam",
				"Set Syntax: YAML"
			],
			[
				"new swi",
				"Set Syntax: New Swift"
			],
			[
				"ali",
				"AlignTab: Live Preview Mode"
			],
			[
				"beauti",
				"Javascript Beautify"
			],
			[
				"json",
				"JsonTree: Show Tree"
			],
			[
				"align",
				"AlignTab: Live Preview Mode"
			],
			[
				"news",
				"Set Syntax: New Swift"
			],
			[
				"brow",
				"Browse Mode..."
			],
			[
				"colorpi",
				"Color Picker"
			],
			[
				"conver",
				"z:AAAPackageDev: Convert (YAML, JSON, PList) to…"
			],
			[
				"convert",
				"z:AAAPackageDev: Convert (YAML, JSON, PList) to…"
			],
			[
				"j",
				"Set Syntax: JavaScript"
			],
			[
				"jav",
				"Set Syntax: JavaScript"
			],
			[
				"javas",
				"Set Syntax: JavaScript"
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"alig",
				"AlignTab: Live Preview Mode"
			],
			[
				"user",
				"Preferences: Key Bindings - User"
			],
			[
				"swift",
				"Set Syntax: Swift"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"synjasc",
				"Set Syntax: JavaScript"
			],
			[
				"opene",
				"Evernote: Open Evernote Note"
			],
			[
				"update",
				"Evernote: Update Evernote Note"
			],
			[
				"evernote",
				"Evernote: Send to Evernote as new note"
			],
			[
				"upda",
				"Evernote: Update Evernote Note"
			],
			[
				"evernote ",
				"Evernote: Send to Evernote as new note"
			],
			[
				"wor ",
				"Word Wrap: Toggle"
			],
			[
				"open ever",
				"Evernote: Open Evernote Note"
			],
			[
				"open ev",
				"Evernote: Open Evernote Note"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"open",
				"Evernote: Open Evernote Note"
			],
			[
				"open ",
				"Evernote: Open Evernote Note"
			],
			[
				"view in",
				"File: New View into File"
			],
			[
				"open everno",
				"Evernote: Open Evernote Note"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"bryn ob",
				"Set Syntax: Bryn Objective-C"
			],
			[
				"objec",
				"Set Syntax: Objective-C"
			],
			[
				"awk",
				"Run Awk for thsi tab into new tab"
			],
			[
				"run",
				"Build: Run"
			],
			[
				"insatll",
				"Package Control: Install Package"
			],
			[
				"viml",
				"Set Syntax: VimL"
			],
			[
				"swi",
				"Set Syntax: Swift"
			],
			[
				"fish",
				"Set Syntax: Shell Script (fish)"
			],
			[
				"live",
				"AlignTab: Live Preview Mode"
			],
			[
				"bryn",
				"Set Syntax: Bryn Swift"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"bryn sw",
				"Set Syntax: Bryn Swift"
			],
			[
				"z:aaa",
				"z:AAAPackageDev: Convert (YAML, JSON, PList) to…"
			],
			[
				"theme",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"objce",
				"Set Syntax: Bryn Objective-C"
			],
			[
				"bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"vim",
				"Set Syntax: VimL"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"synbash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"beaut",
				"Javascript Beautify"
			],
			[
				"javascri",
				"Set Syntax: JavaScript"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"ww",
				"Word Wrap: Toggle"
			],
			[
				"tree",
				"JsonTree: Show Tree"
			],
			[
				"plist",
				"Set Syntax: plist"
			],
			[
				"js2",
				"JS2Coffee: Convert & Make New File"
			],
			[
				"less",
				"Set Syntax: LESS"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"package ",
				"Preferences: Browse Packages"
			],
			[
				"js2c",
				"JS2Coffee: Convert & Make New File"
			],
			[
				"plisttojson",
				"Plist Json Converter: PLIST to JSON"
			],
			[
				"plistto",
				"z:AAAPackageDev: Property List to JSON"
			],
			[
				"plisttojso",
				"Plist Json Converter: PLIST to JSON"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"plisttojs",
				"Plist Json Converter: PLIST to JSON"
			],
			[
				"scope al",
				"Toggle ScopeAlways"
			],
			[
				"github flavor",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"php",
				"Set Syntax: PHP"
			],
			[
				"htmlto",
				"HTML2Jade: Convert selection"
			],
			[
				"dispacka",
				"Package Control: Disable Package"
			],
			[
				"objc",
				"Set Syntax: Bryn Objective-C"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"synhtml",
				"Set Syntax: HTML5"
			],
			[
				"brynjav",
				"Set Syntax: Bryn Java"
			],
			[
				"inser",
				"Color Picker: Insert Color"
			],
			[
				"aaajson",
				"z:AAAPackageDev: JSON to Property List"
			],
			[
				"aaajs",
				"z:AAAPackageDev: JSON to Property List"
			],
			[
				"wrap au",
				"Word Wrap: Automatic Column"
			],
			[
				"spaces",
				"Indentation: Convert to Spaces"
			],
			[
				"colo",
				"Color Picker: Insert Color"
			],
			[
				"aaajso",
				"z:AAAPackageDev: Property List to JSON"
			],
			[
				"wrap 120",
				"Word Wrap: Column 120"
			],
			[
				"sublim",
				"Set Syntax: Sublime Settings"
			],
			[
				"synbryn",
				"Set Syntax: Bryn Java"
			],
			[
				"bryn j",
				"Set Syntax: Bryn Java"
			],
			[
				"insert",
				"Color Picker: Insert Color"
			],
			[
				"brynjava",
				"Set Syntax: Bryn Java"
			],
			[
				"java",
				"Snippet: java.beans."
			],
			[
				"synmarkdown",
				"Set Syntax: Markdown"
			],
			[
				"synsyn",
				"Set Syntax: Sublime Text Syntax Definition"
			],
			[
				"restru",
				"Set Syntax: reStructuredText"
			]
		],
		"width": 687.0
	},
	"console":
	{
		"height": 622.0,
		"history":
		[
			":84",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": true,
		"side_bar_visible": false,
		"status_bar_visible": true
	},
	"expanded_folders":
	[
		"/Users/bryn/projects/_node.js/fs-objects"
	],
	"file_history":
	[
		"/Users/bryn/projects/_node.js/fs-objects/src/d.ts/index.d.ts",
		"/Users/bryn/projects/_node.js/fs-objects/build/index.d.ts",
		"/Users/bryn/projects/_node.js/fs-objects/build/Directory.d.ts",
		"/Users/bryn/projects/_node.js/fs-objects/build/index.js",
		"/Users/bryn/projects/_node.js/fs-objects/src/d.ts/common.d.ts",
		"/Users/bryn/projects/_node.js/fs-objects/src/d.ts/FSPath.d.ts",
		"/Users/bryn/projects/_node.js/fs-objects/src/d.ts/FSObject.d.ts",
		"/Users/bryn/projects/_node.js/fs-objects/src/d.ts/FileCollection.d.ts",
		"/Users/bryn/projects/_node.js/fs-objects/src/d.ts/File.d.ts",
		"/Users/bryn/projects/_node.js/fs-objects/src/d.ts/Directory.d.ts",
		"/Users/bryn/projects/_node.js/fs-objects/build/common.d.ts",
		"/Users/bryn/projects/_node.js/fs-objects/tsconfig.json",
		"/Users/bryn/projects/_node.js/fs-objects/src/common.ts",
		"/Users/bryn/projects/_node.js/fs-objects/src/Directory.ts",
		"/Users/bryn/projects/_web/captains-blog/tsd.json",
		"/Users/bryn/projects/_node.js/fs-objects/src/File.ts",
		"/Users/bryn/projects/_node.js/fs-objects/src/FSObject.ts",
		"/Users/bryn/projects/_node.js/fs-objects/src/index.ts",
		"/Users/bryn/projects/_node.js/fs-objects/package.json",
		"/Users/bryn/projects/_web/captains-blog/src/lib/fs-objects/Directory.ts",
		"/Users/bryn/projects/_web/captains-blog/src/lib/fs-objects/FileCollection.ts",
		"/Users/bryn/projects/_web/captains-blog/src/lib/fs-objects/index.ts",
		"/Users/bryn/projects/_web/captains-blog/src/lib/fs-objects/File.ts",
		"/Users/bryn/projects/_node.js/fs-objects/Makefile",
		"/Users/bryn/projects/_node.js/fs-objects/typings/tsd.d.ts",
		"/Users/bryn/projects/_node.js/fs-objects/typings/typescript/typescript.d.ts",
		"/Users/bryn/projects/_node.js/_d.ts/lodash/lodash.d.ts",
		"/Users/bryn/projects/_web/captains-blog/typings/tsd.d.ts",
		"/Users/bryn/projects/_web/captains-blog/tsconfig.json",
		"/Users/bryn/projects/_web/captains-blog/src/lib/fs-objects/FSObject.ts",
		"/Users/bryn/projects/_web/captains-blog/src/lib/fs-objects/Path.ts",
		"/Users/bryn/projects/_web/captains-blog/src/lib/Post.ts",
		"/Users/bryn/projects/_web/captains-blog/src/app.ts",
		"/Users/bryn/projects/_web/captains-blog/src/lib/routes.ts",
		"/Users/bryn/projects/_web/captains-blog/typings/lodash/lodash.d.ts",
		"/Users/bryn/projects/_web/captains-blog/src/lib/config.ts",
		"/Users/bryn/projects/_node.js/blessed/package.json",
		"/Users/bryn/projects/_web/captains-blog/package.json",
		"/Users/bryn/projects/_web/captains-blog/build/app.js",
		"/tmp/diff",
		"/Users/bryn/projects/_swift/_swift-build-tool/configure-project.rb",
		"/Users/bryn/projects/_swift/Funky/Funky.podspec",
		"/Users/bryn/projects/_swift/Funky/src/Regex.swift",
		"/Users/bryn/projects/_swift/Regex/src/Regex.swift",
		"/Users/bryn/projects/_swift/_swift-build-tool/*.r",
		"/Users/bryn/projects/_swift/_swift-build-tool/b",
		"/Users/bryn/projects/_swift/_swift-build-tool/build-tools.rb",
		"/Users/bryn/projects/dbt-notes/index.md",
		"/Users/bryn/projects/dbt-notes/2015-02-25.md",
		"/Users/bryn/projects/dbt-notes/2015-02-22.md",
		"/Users/bryn/projects/dbt-notes/posts/2015-03-02.md",
		"/Users/bryn/projects/datwantendo/master/terms.md",
		"/Users/bryn/projects/dbt-notes/style-overrides.css",
		"/Users/bryn/projects/dbt-notes/2015-02-25--the-game-vs-the-zone.md",
		"/Users/bryn/projects/_node.js/mdgen/bin/mdgen",
		"/Users/bryn/projects/dbt-notes/feb.md",
		"/Users/bryn/projects/_node.js/mdgen/package.json",
		"/tmp/opts.txt",
		"/Users/bryn/bin/mdgen",
		"/Users/bryn/projects/_node.js/ts-reg-test/blah.ts",
		"/Users/bryn/projects/_node.js/ts-reg-test/index.js",
		"/Users/bryn/projects/datwantendo/master/video-games.md",
		"/Users/bryn/projects/datwantendo/master/index.md",
		"/Users/bryn/projects/datwantendo/master/aikido.md",
		"/private/tmp/commonplace/config/commonplace.yml",
		"/Users/bryn/projects/datwantendo/index.md",
		"/Users/bryn/projects/datwantendo/goals.md",
		"/Users/bryn/projects/datwantendo/README.md",
		"/Users/bryn/projects/datwantendo/terms.md",
		"/Users/bryn/projects/datwantendo/aikido.md",
		"/Users/bryn/.rvm/gems/ruby-2.2.0/gems/xcodeproj-0.21.2/lib/xcodeproj/project/object/build_configuration.rb",
		"/Users/bryn/.rvm/gems/ruby-2.2.0/gems/cocoapods-clean-0.0.1/lib/cocoapods_plugin.rb",
		"/Users/bryn/projects/_swift/Funky/Pods/Pods.xcodeproj/xcuserdata/bryn.xcuserdatad/xcschemes/Pods-FunkyTests-Nimble.xcscheme",
		"/Users/bryn/projects/_swift/Funky/Pods/Pods.xcodeproj/xcuserdata/bryn.xcuserdatad/xcschemes/Pods-FunkyTests-LlamaKit.xcscheme",
		"/Users/bryn/projects/_swift/Funky/Pods/Pods.xcodeproj/xcuserdata/bryn.xcuserdatad/xcschemes/Pods-FunkyTests.xcscheme",
		"/Users/bryn/projects/_swift/Funky/Funky.xcodeproj/project.pbxproj",
		"/Users/bryn/projects/_swift/Funky/Pods/Nimble/Nimble/Matchers/BeEmpty.swift",
		"/Users/bryn/.rvm/gems/ruby-2.2.0/gems/cocoapods-0.36.0.beta.2/lib/cocoapods/project.rb",
		"/Users/bryn/projects/_swift/SwiftBitmask/.xctool-args",
		"/Users/bryn/projects/_swift/Funky-peru/.xctool-args",
		"/Users/bryn/projects/_swift/Funky/Pods/Target Support Files/Pods/Pods-environment.h",
		"/Users/bryn/projects/_swift/Funky/Podfile",
		"/Users/bryn/projects/_swift/Funky/Pods/Target Support Files/Pods/Pods-resources.sh",
		"/Users/bryn/projects/_swift/FlatUIColors/README.md",
		"/Users/bryn/projects/_swift/FlatUIColors/FlatUIColors.swift",
		"/Users/bryn/projects/_swift/FlatUIColors/FlatUIColors.podspec",
		"/Users/bryn/projects/_swift/FlatUIColors/SwiftFlatUIColors.podspec",
		"/Users/bryn/projects/_swift/Regex/Podfile",
		"/Users/bryn/projects/_swift/Funky/Makefile",
		"/Users/bryn/projects/_swift/Funky/src/vendor/Regex.swift",
		"/Users/bryn/projects/_swift/Entish/README.md",
		"/Users/bryn/projects/_swift/SwiftConfig/Podfile",
		"/Users/bryn/projects/_swift/SwiftBitmask/SwiftBitmask.podspec",
		"/Users/bryn/projects/_swift/FlatUIColors/Podfile",
		"/Users/bryn/projects/_swift/SwiftDataStructures/README.md",
		"/Users/bryn/projects/_swift/_swift-cocoapod-template/README.md",
		"/Users/bryn/.rvm/gems/ruby-2.2.0/gems/jazzy-0.1.0/lib/jazzy/sourcekitten.rb",
		"/Users/bryn/projects/Funky/Funky/Functions.Functional.swift",
		"/Users/bryn/projects/Funky/Funky/Functions.File.swift",
		"/Users/bryn/projects/_swift/Funky/README.md",
		"/tmp/install.sh",
		"/Users/bryn/projects/_swift/Funky/FunkyTests/RegexTests.swift",
		"/Users/bryn/projects/_swift/Funky/Funky.sublime-project",
		"/Users/bryn/projects/_swift/Funky/src/Functions.Functional.swift",
		"/Users/bryn/projects/_swift/Funky/Pods/Nimble/Nimble/Utils/Functional.swift",
		"/Users/bryn/projects/_swift/Funky/FunkyTests/FunkyTests.swift",
		"/Users/bryn/projects/_swift/Funky/FunkyTests/Functions.FunctionalTests.swift",
		"/Users/bryn/projects/_swift/Funky/FunkyTests/ErrorIOTests.swift",
		"/Users/bryn/projects/_swift/Respect/src/Spec.Common.swift",
		"/Users/bryn/projects/_swift/SwiftDataStructures/Podfile",
		"/Users/bryn/bin/xcwork",
		"/Users/bryn/projects/_swift/Funky/Pods/Target Support Files/Pods-LlamaKit/Pods-LlamaKit-prefix.pch",
		"/Users/bryn/projects/_swift/Funky/build/Products/Debug/Pods.framework/Pods",
		"/Users/bryn/projects/_swift/Funky/src/Functions.Strings.swift",
		"/Users/bryn/projects/_swift/Funky/Source/Functions.Functional.swift",
		"/Users/bryn/projects/_swift/Funky/Source/Regex.swift",
		"/Users/bryn/projects/_blog/config.yaml",
		"/Users/bryn/.zshrc",
		"/Users/bryn/projects/_swift/Funky/Source/Functions.Strings.swift",
		"/Users/bryn/Library/Application Support/Sublime Text 3/Packages/Source Code Structure Navigator/SourceCodeStructureNavigator.py",
		"/Users/bryn/projects/_swift/SwiftDataStructures/Protocol conformance tests/Spec.swift",
		"/Users/bryn/projects/_swift/SwiftDataStructures/Protocol conformance tests/ListTypeSpec.swift",
		"/Users/bryn/projects/_swift/SwiftDataStructures/SwiftDataStructuresTests/OrderedDictionaryTests.swift",
		"/Users/bryn/projects/_swift/SwiftDataStructures/SwiftDataStructuresTests/LinkedListTests.swift",
		"/Users/bryn/projects/_swift/SwiftDataStructures/Protocol conformance tests/CollectionTypeSpec.swift",
		"/Users/bryn/projects/_swift/SwiftDataStructures/.xctool-args",
		"/Users/bryn/projects/_swift/SwiftDataStructures/Pods/Target Support Files/Pods/Pods-acknowledgements.markdown",
		"/Users/bryn/projects/_swift/SwiftDataStructures/build/Products/Debug/Pods-SwiftDataStructuresTests/Quick.framework/Versions/A/Headers/QuickConfiguration.h"
	],
	"find":
	{
		"height": 54.0
	},
	"find_in_files":
	{
		"height": 154.0,
		"where_history":
		[
			"<project>,*.ts,-*.d.ts",
			"<project>",
			"<project>,*.swift",
			"<project>,*.h",
			"<project>,*.swift",
			"<project>",
			"<project>,*.xml",
			"<project>",
			"<project>,*.java",
			"<project>,*.xml",
			"<project>,*.java",
			"<project>",
			"<project>,*.xml",
			"<project>,*.java",
			"<project>",
			"",
			"<project>",
			"",
			"/tmp/zing.txt",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"declare ",
			"./",
			"declare ",
			"File",
			"Collection",
			"File",
			"./",
			"when",
			"Path",
			"File",
			"./",
			"./Path",
			"\\bPath\\b",
			"Path",
			"captains-blog",
			"/fs-objects",
			"/lib",
			"FilterPredicate",
			"Listing",
			"common",
			"Directory",
			"File",
			"Path",
			"FSOb",
			"Directory",
			"File",
			"filenamesToDirectoryListing",
			"DirectoryListing",
			"FileCollection.Listing",
			"listing",
			"Directory.Listing",
			"Directory",
			"FileCollection.",
			"Directory",
			"File",
			"FileColl",
			"File",
			"validEmojiNames",
			"validEmojis",
			"Directory.Contents",
			"Contents",
			"'",
			"basename",
			"base",
			"extname",
			"export",
			"keysIn",
			"keys\\(",
			"keys",
			"contents",
			"EMOJI_DIR",
			"\\.contents",
			"tokens[idx].markup",
			"POSTS",
			"require\\('\\.\\/mark",
			"require('./mark",
			"emojiDir",
			"var",
			"onfig",
			"new fso.Dir",
			"neckbeard",
			"chjj/blessed",
			"enerat",
			"ensureTarget",
			"group",
			"\"",
			"> ",
			"-",
			"surface",
			"-",
			"\"",
			" ",
			"rather",
			"frict",
			"novelty",
			"->",
			"`->`",
			"\\-\\>",
			"\\$",
			"who i",
			"motivia",
			"freewh",
			"iPhone",
			"app",
			" ",
			"don",
			"other hand",
			".",
			"you",
			"ensure",
			".",
			"0.",
			"- ",
			"*",
			" ",
			"in",
			"|                              |                                           |                                                                      |",
			"res",
			"filename",
			"$",
			"$cli",
			"err",
			"15",
			"0.",
			"evolution-y",
			"**",
			"Skillful ",
			"**",
			"iabete",
			"(b)",
			"Skillful",
			"(b)",
			"ref",
			"t",
			"target_name",
			"target",
			"\"",
			"dynamic_lib",
			"XCBuildConfiguration",
			"setting",
			"eferenc",
			"ensureFile",
			":",
			"target",
			"ensureTar",
			"named",
			"filepath",
			"group_name"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"./FSPath",
			"",
			"String",
			"\\1/**\\n\\1    \\2\\n\\1 */",
			"\\1/**\\n\\1    ",
			"\n\n-",
			"var",
			" ",
			"",
			" #",
			"  ",
			"    ",
			"#main-header-menu",
			"carousel-illumntr-home",
			"    ",
			"        ",
			"^        ",
			"public static IDataStoreManager SharedDataStoreManager()",
			"background",
			"\\n-",
			"com.signalenvelope.ListKit.AutoResizeTextView",
			"SharedDataStoreManager()",
			"getListViewRowTextResourceID",
			"getListViewRowLayoutID",
			"SearchString",
			"fetchItemWithID",
			"fetchParentOfItem",
			"fetchTopLevelItems",
			"fetchChildrenOfItemWithID",
			"fetchNumberOfChildrenForItem",
			"fetchAllItems",
			"ShipsListDataStore",
			"IDataStore",
			"IDataStoreManager",
			"CachingDataStoreManager",
			"DataStoreManager",
			"shared",
			"layout_toStartOf=\"@+id/imgSwitchAppSections\"",
			"txtTitleApp",
			"raw/icon_search",
			"@drawable/blue_titlebar",
			"L3Utils.INTENT_EXTRA__ITEM_TO_LOAD",
			"fetchItemWithID",
			"fetchNumberOfChildrenForItem",
			"fetchAllItems",
			"this.addItem( shipListItem_\\1 );",
			"data.put",
			"activityClassToHandleTappedListItem",
			"ShipsDB",
			"shared",
			"</div>",
			"<div class=\"title\">",
			"div class=\"title\"",
			"&amp;",
			"</a></div>",
			"<div class=\"contact-method\"><a ",
			"",
			"class=\"item\"",
			"",
			"</div>",
			"<div",
			"date",
			"",
			"&amp;",
			"",
			"</div>",
			"<div> • ",
			"&amp;",
			"initializeData(",
			"L3-SRG",
			"InMemoryDBHelper",
			"Copyright (c) 2013 bryn austin bellomy",
			"FetchShipsAsyncTask",
			"txtListItemCellText",
			"com/signalenvelope",
			"com.signalenvelope.L3_SRG",
			"com.signalenvelope.L3-SRG",
			"[\"super+i\",",
			"sg_message_inbox",
			"remoterepository",
			"bryn.bellomy@gmail.com",
			"bryn.bellomy@gmail.com-remote",
			"bryn.bellomy@gmail.com-local",
			"'",
			"Earl",
			"\\(prefix, files",
			"log_success \"\\1\"",
			"log_task \"\\1\"",
			"queueCb",
			"errCb",
			"renumber",
			"pngs",
			"pngs.",
			"module.exports.",
			"exports.renumber",
			"exports.stepFilter",
			"exports.copyAllFilesInDirTo",
			"exports.removeTempDir",
			"exports.makeDirs",
			"exports.makeMatte",
			"exports.filesWithPrefix",
			"inputDir",
			"inputDirectory",
			"[[:space:]]*",
			"#{@\\1}",
			"#{\\1}",
			"#{@acceptable_chars_in_regular_statements}",
			"#{@identifier}",
			"#{@type}",
			"#{@l_bracket}",
			"#{@r_paren}",
			"#{@r_bracket}",
			"#{@r_paren}",
			"#{@l_paren}",
			"#{@sp}",
			"#{sp}",
			",\\n",
			"bool",
			"bool\nbool",
			"NSNotificationCenter.defaultCenter",
			"\"",
			"blue.bold",
			"mkCopyMsg",
			"stages",
			"otis",
			"Otis",
			"otis",
			"-"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 610.0
	},
	"pinned_build_system": "",
	"project": "fs-objects.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"packag",
				"package.json"
			],
			[
				"file.ts",
				"src/lib/fs-objects/File.ts"
			],
			[
				"tsc",
				"tsconfig.json"
			],
			[
				"post.ts",
				"src/lib/Post.ts"
			],
			[
				"index.ts",
				"src/lib/fs-objects/index.ts"
			],
			[
				"tscon",
				"tsconfig.json"
			],
			[
				"fsob",
				"src/lib/fs-objects/FSObject.ts"
			],
			[
				"tsd.d.ts",
				"typings/tsd.d.ts"
			],
			[
				"lodash",
				"typings/lodash/lodash.d.ts"
			],
			[
				"app.ts",
				"src/app.ts"
			],
			[
				"routes.ts",
				"src/lib/routes.ts"
			],
			[
				"config.ts",
				"src/lib/config.ts"
			],
			[
				"path.ts",
				"src/lib/fs-objects/Path.ts"
			],
			[
				"dire",
				"src/lib/fs-objects/Directory.ts"
			],
			[
				"styl",
				"~/projects/dbt-notes/style-overrides.css"
			],
			[
				"peru",
				"Funky/peru.yaml"
			],
			[
				"regex",
				"src/vendor/Regex.swift"
			],
			[
				"functional",
				"Funky/Pods/Nimble/Nimble/Utils/Functional.swift"
			],
			[
				"funfun",
				"Funky/src/Functions.Functional.swift"
			],
			[
				"podspec",
				"Funky/Funky.podspec"
			],
			[
				"podfile",
				"Funky/Podfile"
			],
			[
				"regex.s",
				"Funky/src/vendor/Regex.swift"
			],
			[
				"funcstr",
				"Funky/src/Functions.Strings.swift"
			],
			[
				"func",
				"Funky/src/Functions.Functional.swift"
			],
			[
				"funcs",
				"Source/Functions.Functional.swift"
			],
			[
				"coltysp",
				"Protocol conformance tests/CollectionTypeSpec.swift"
			],
			[
				"typesp",
				"Protocol conformance tests/ListTypeSpec.swift"
			],
			[
				"ordictest",
				"SwiftDataStructuresTests/OrderedDictionaryTests.swift"
			],
			[
				"ordict",
				"Classes/OrderedDictionary.swift"
			],
			[
				"linlistes",
				"SwiftDataStructuresTests/LinkedListTests.swift"
			],
			[
				"order",
				"Classes/OrderedDictionary.swift"
			],
			[
				"linked",
				"SwiftDataStructuresTests/LinkedListTests.swift"
			],
			[
				"set.",
				"Classes/Set.swift"
			],
			[
				"dictest",
				"SwiftDataStructuresTests/OrderedDictionaryTests.swift"
			],
			[
				"tests",
				"SwiftDataStructuresTests/QueueTests.swift"
			],
			[
				"colsp",
				"Protocol conformance tests/CollectionTypeSpec.swift"
			],
			[
				"listspec",
				"Protocol conformance tests/ListTypeSpec.swift"
			],
			[
				"colt",
				"Protocol conformance tests/CollectionTypeSpec.swift"
			],
			[
				"listtype",
				"Protocols/ListType.swift"
			],
			[
				"linke",
				"Classes/LinkedList.swift"
			],
			[
				"spec.sw",
				"Protocol conformance tests/ListTypeSpec.swift"
			],
			[
				"",
				"build/Intermediates/Pods.build/Debug/Pods-SwiftDataStructuresTests-Quick.build/unextended-module.modulemap"
			],
			[
				"dictests",
				"SwiftDataStructuresTests/OrderedDictionaryTests.swift"
			],
			[
				"listtests",
				"SwiftDataStructuresTests/LinkedListTests.swift"
			],
			[
				"licen",
				"LICENSE.md"
			],
			[
				"sidebar",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/SidebarItem.swift"
			],
			[
				"playviewcon",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/PlaylistViewController.swift"
			],
			[
				"playlist.m",
				"illumntr-music-player/illumntr-music-player/Classes/NSManagedObject subclasses/human/Playlist.m"
			],
			[
				"collec",
				"illumntr-music-player/illumntr-music-player/Classes/Extensions/Collections+BrynKit.swift"
			],
			[
				"playlistviewcon",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/PlaylistViewController.swift"
			],
			[
				"bryn.",
				"BrynKit/Main/Bryn.m"
			],
			[
				"playviemo",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/PlaylistViewModel.swift"
			],
			[
				"trackom",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/TrackModel.swift"
			],
			[
				"+pxswi",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/PlaylistViewController+PXSourceListDelegate.swift"
			],
			[
				"playcolcellswi",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/PlaylistCollectionViewCell.swift"
			],
			[
				"playm",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/PlaylistModel.swift"
			],
			[
				"playviewmo",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/PlaylistViewModel.swift"
			],
			[
				"collec.sw",
				"illumntr-music-player/illumntr-music-player/Classes/Extensions/Collections+BrynKit.swift"
			],
			[
				"cell.swif",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/PlaylistCollectionViewCell.swift"
			],
			[
				"playlistmodel",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/PlaylistModel.swift"
			],
			[
				"playlistviewmodel",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/PlaylistViewModel.swift"
			],
			[
				"+pxsou",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/PlaylistViewController+PXSourceListDelegate.swift"
			],
			[
				"pxsourlistdel",
				"illumntr-music-player/Pods/BuildHeaders/PXSourceList/PXSourceListDelegate.h"
			],
			[
				"audiom",
				"illumntr-music-player/illumntr-music-player/Classes/Audio/AudioManager.swift"
			],
			[
				"masterr",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/SEMasterViewController.swift"
			],
			[
				"appconfig",
				"illumntr-music-player/illumntr-music-player/Classes/Common/AppConfiguration.swift"
			],
			[
				"appdel.sw",
				"illumntr-music-player/illumntr-music-player/Classes/Common/AppDelegate.swift"
			],
			[
				"common",
				"illumntr-music-player/illumntr-music-player/Classes/Common/Common.swift"
			],
			[
				"trackmodel",
				"illumntr-music-player/illumntr-music-player/Classes/Player MVVM/TrackModel.swift"
			],
			[
				"modelbase",
				"illumntr-music-player/illumntr-music-player/Classes/Common/ModelBase.swift"
			],
			[
				"collectio",
				"illumntr-music-player/illumntr-music-player/Classes/Collections+BrynKit.swift"
			],
			[
				"bridging",
				"illumntr-music-player/illumntr-music-player/illumntr-music-player-Bridging-Header.h"
			],
			[
				"pxsourcelist",
				"illumntr-music-player/Pods/BuildHeaders/PXSourceList/PXSourceList.h"
			],
			[
				"semaster+px",
				"illumntr-music-player/illumntr-music-player/Classes/SEMasterViewController+PXSourceListDelegate.swift"
			],
			[
				"semastr",
				"illumntr-music-player/illumntr-music-player/Classes/SEMasterViewController.swift"
			],
			[
				"appdele",
				"illumntr-music-player/illumntr-music-player/Classes/AppDelegate.swift"
			],
			[
				"audiopla",
				"illumntr-music-player/illumntr-music-player/Classes/AudioPlayerDelegateWrapper.m"
			],
			[
				"brynkitlog",
				"BrynKit/Main/BrynKitLogging.h"
			],
			[
				"coll",
				"illumntr-music-player/illumntr-music-player/Classes/Collections+BrynKit.swift"
			],
			[
				"ezaudioplayer",
				"illumntr-music-player/Pods/BuildHeaders/EZAudio/EZAudioPlayer.h"
			],
			[
				"seaudio",
				"illumntr-music-player/illumntr-music-player/Classes/SEAudioManager.m"
			],
			[
				"track.sw",
				"illumntr-music-player/illumntr-music-player/Classes/Models/human/Track.swift"
			],
			[
				"track",
				"illumntr-music-player/illumntr-music-player/Classes/Track.swift"
			],
			[
				"signal",
				"illumntr-music-player/illumntr-music-player/Classes/Signal+BrynKit.swift"
			],
			[
				"seplayliscol",
				"illumntr-music-player/illumntr-music-player/Classes/SEPlaylistCollectionViewCell.swift"
			],
			[
				"observable",
				"illumntr-music-player/illumntr-music-player/Classes/SEObservableModel.swift"
			],
			[
				"se.swift",
				"illumntr-music-player/illumntr-music-player/SEPlaylistItem.swift"
			],
			[
				"collection",
				"illumntr-music-player/illumntr-music-player/Classes/Collections+BrynKit.swift"
			],
			[
				"seplaylistmodel",
				"illumntr-music-player/illumntr-music-player/Classes/SEPlaylistModel.m"
			],
			[
				"masterview+",
				"illumntr-music-player/illumntr-music-player/Classes/SEMasterViewController+JNWCollectionView.swift"
			],
			[
				"semas.m",
				"illumntr-music-player/illumntr-music-player/Classes/SEMasterViewController.m"
			],
			[
				"semas.swi",
				"illumntr-music-player/illumntr-music-player/Classes/SEMasterViewController.swift"
			],
			[
				"brynkitcolor",
				"Main/BrynKitColor.h"
			],
			[
				"illumntr.css",
				"public/stylesheets/illumntr.css"
			],
			[
				"illu-va",
				"public/stylesheets/illumntr-variables.less"
			],
			[
				"illuelem",
				"public/stylesheets/illumntr-elements.less"
			],
			[
				"ill.less",
				"public/stylesheets/illumntr.less"
			],
			[
				"heade",
				"views/partials/header.jade"
			],
			[
				"slide-mus",
				"views/partials/slides/slide-music.jade"
			],
			[
				"slid-sho",
				"views/partials/slides/slide-shows.jade"
			],
			[
				"mixin",
				"views/mixins.jade"
			],
			[
				"ill-var",
				"public/stylesheets/illumntr-variables.less"
			],
			[
				"varia",
				"public/stylesheets/variables.less"
			],
			[
				"illu.css",
				"public/stylesheets/src/illumntr.css"
			],
			[
				"slide-abou",
				"views/partials/slides/slide-about.jade"
			],
			[
				"elemen",
				"public/stylesheets/src/illumntr-elements.less"
			],
			[
				"mixi",
				"views/mixins.jade"
			],
			[
				"slide-musi",
				"views/partials/slides/slide-music.jade"
			],
			[
				"illum.less",
				"public/stylesheets/src/illumntr-variables.less"
			],
			[
				"illu.less",
				"public/stylesheets/src/illumntr-elements.less"
			],
			[
				"header.jad",
				"views/partials/header.jade"
			],
			[
				"inde.",
				"views/index.jade"
			],
			[
				"illeleme",
				"public/stylesheets/src/illumntr-elements.less"
			],
			[
				"slide-about",
				"views/partials/slides/slide-about.jade"
			],
			[
				"mixins.jade",
				"views/mixins.jade"
			],
			[
				"main-menu.jade",
				"views/partials/carousel-main-menu.jade"
			],
			[
				"ill-ele",
				"public/stylesheets/src/illumntr-elements.less"
			],
			[
				"carousel.ja",
				"views/partials/carousel-home.jade"
			],
			[
				"app",
				"app.coffee"
			],
			[
				"packa",
				"package.json"
			],
			[
				"illumntr.less",
				"public/stylesheets/src/illumntr.less"
			],
			[
				"bootstrap.less",
				"public/bootstrap/less/bootstrap.less"
			],
			[
				"app.co",
				"app.coffee"
			],
			[
				"ill-vari",
				"stylesheets/illumntr-variables.less"
			],
			[
				"mixins",
				"views/mixins.jade"
			],
			[
				"slide-shows",
				"views/partials/slides/slide-shows.jade"
			],
			[
				"illumntr-wix",
				"stylesheets/illumntr-wix.less"
			],
			[
				"element",
				"stylesheets/illumntr-elements.less"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"/Users/bryn/projects/_android/recipes/recipes.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 368.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				".itBehavesLike"
			]
		],
		"width": 1056.0
	},
	"selected_group": 0,
	"settings":
	{
		"vintage":
		{
		}
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 322.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
